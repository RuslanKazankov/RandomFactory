<Window x:Class="RandomFactory.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RandomFactory" xmlns:viewmodels="clr-namespace:RandomFactory.ViewModels" xmlns:i="http://schemas.microsoft.com/xaml/behaviors" d:DataContext="{d:DesignInstance Type=viewmodels:MainVM}"
        mc:Ignorable="d"
        Title="RandomFactory" Height="800" Width="800" Closing="Window_Closing"
        WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <Style TargetType="ListBox" x:Key="HistoryValues">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.Background>
            <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                <GradientStop Color="{StaticResource Gray100}" Offset="0"/>
                <GradientStop Color="{StaticResource Gray80}" Offset="0.7"/>
            </LinearGradientBrush>
        </Grid.Background>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Grid Height="300" Grid.Column="1">
                <ListBox x:Name="HistoryListBox" Margin="30,0" HorizontalContentAlignment="Right" Style="{StaticResource HistoryValues}" ItemsSource="{Binding ValueHistory}" VerticalAlignment="Bottom">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock FontSize="20" Opacity="0.2" HorizontalAlignment="Right" Text="{Binding Value}"/>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding HistorySelectCommand}" 
                                CommandParameter="{Binding ElementName=HistoryListBox, Path=SelectedItem}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ListBox>
            </Grid>
            <StackPanel Grid.ColumnSpan="3" Grid.Row="1">
                <TextBlock x:Name="ResultOfGeneration"
                       FontSize="60"
                       FontWeight="Bold"
                       Text="{Binding ResultOfGeneration}"
                       TextAlignment="Center"
                       HorizontalAlignment="Center"/>
                <Button Style="{DynamicResource MiniButton}"
                        Command="{Binding CopyResultCommand}"
                        HorizontalAlignment="Center" Content="Копировать"/>
            </StackPanel>
            <StackPanel Grid.Column="1" Grid.Row="2" Width="300">
                <StackPanel>
                    <StackPanel>
                        <Button Command="{Binding GenerateIntCommand}"
                        Content="Сгенерировать целое число"/>
                        <Button Command="{Binding GenerateDoubleCommand}"
                        Content="Сгенерировать вещественное число"/>
                        <Button Command="{Binding GeneratePercentCommand}"
                        Content="Сгенерировать процент"/>
                    </StackPanel>
                    <StackPanel>
                        <Label Content="Ключ генерации:"/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="0.5*"/>
                            </Grid.ColumnDefinitions>
                            <TextBox Text="{Binding Path=Seed, UpdateSourceTrigger=PropertyChanged}"/>
                            <Button Command="{Binding RandomSeedCommand}" Margin="0" Grid.Column="1" Content="Случайный"/>
                        </Grid>
                    </StackPanel>
                    <StackPanel>
                        <CheckBox x:Name="UseRangeCheckBox" IsChecked="{Binding UseRange}" 
                              Content="Использовать диапозон"
                              HorizontalAlignment="Center"/>
                        <Grid>
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=UseRangeCheckBox, Path=IsChecked}" Value="true">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=UseRangeCheckBox, Path=IsChecked}" Value="false">
                                            <Setter Property="Visibility" Value="Hidden"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <StackPanel>
                                <Label Content="Минимум:"/>
                                <TextBox Text="{Binding MinRange, UpdateSourceTrigger=PropertyChanged}"/>
                                <Label Content="Максимум:"/>
                                <TextBox Text="{Binding MaxRange, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                </StackPanel>
            </StackPanel>
            <StackPanel Grid.Column="2" Grid.Row="1">
                <UniformGrid Columns="2">
                    <TextBlock Text="Шаг: "/>
                    <TextBlock Text="{Binding CurrentStep}"/>
                </UniformGrid>
            </StackPanel>
        </Grid>
    </Grid>
</Window>
